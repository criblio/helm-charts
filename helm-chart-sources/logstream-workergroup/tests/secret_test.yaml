suite: Secret
templates:
  - secret.yaml
tests:
  - it: Should set a secret
    set:
      config:
        token: foo-bar-baz
        host: supreme-leader
        group: goats
    asserts:
      - equal:
          path: stringData.url-master
          value: "tcp://foo-bar-baz@supreme-leader:4200?group=goats&tag=goats"

  - it: Should set multiple tags
    set:
      config:
        token: foo-bar-baz
        host: supreme-leader
        group: goats
        tags:
          - foo
          - bar
          - baz
    asserts:
      - equal:
          path: stringData.url-master
          value: "tcp://foo-bar-baz@supreme-leader:4200?group=goats&tag=goats&tag=foo&tag=bar&tag=baz"

  - it: Should handle custom TCP port
    set:
      config:
        token: foo-bar-baz
        host: supreme-leader
        port: 1234 
        group: goats
    asserts:
      - equal:
          path: stringData.url-master
          value: "tcp://foo-bar-baz@supreme-leader:1234?group=goats&tag=goats"

  - it: Should not create a secret if existingSecret is defined
    set:
      config:
        useExistingSecret: true
    asserts:
      - hasDocuments:
          count: 0

  - it: Should set TLS options with camelCase parameter names
    set:
      config:
        token: foo
        host: supreme-leader
        group: goats
        tlsLeader:
          enable: true
          capath: /etc/ssl/ca.pem
          certpath: /etc/ssl/cert.pem
    asserts:
      - equal:
          path: stringData.url-master
          value: "tls://foo@supreme-leader:4200?group=goats&tag=goats&tls.caPath=/etc/ssl/ca.pem&tls.certPath=/etc/ssl/cert.pem"
