suite: Deployment
templates:
  - statefulset.yaml

tests:
  - it: Should not have a strategy by default
    set:
      deployment: statefulset
    asserts:
      - isNull:
          path: spec.strategy
      - isNull:
          path: spec.updateStrategy

  - it: Should have a custom strategy
    set:
      deployment: statefulset
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
    asserts:
      - isNull:
          path: spec.strategy
      - isNotNull:
          path: spec.updateStrategy
      - equal:
          path: spec.updateStrategy
          value:
            type: RollingUpdate
            rollingUpdate:
              maxUnavailable: 1
              maxSurge: 1

  - it: Should fail on bad strategy
    set:
      deployment: statefulset
      strategy:
        type: GOAT
    asserts:
      - failedTemplate:
          errorMessage: Not a valid strategy type for StatefulSet (GOAT)

  - it: Should have no volume claim templates by default
    set:
      deployment: statefulset
    asserts:
      - isNullOrEmpty:
          path: spec.volumeClaimTemplates

  - it: Should fail on missing claim template
    set:
      deployment: statefulset
      extraVolumeMounts:
        - name: test
    asserts:
      - failedTemplate:
          errorMessage: Missing volume claim template in extra volume mount for Statefulset (test)

  - it: Should fail on existing claim
    set:
      deployment: statefulset
      extraVolumeMounts:
        - name: test
          existingClaim: invalid
    asserts:
      - failedTemplate:
          errorMessage: Cannot use existing volume claim in extra volume mount for Statefulset (test)

  - it: Should have persistent volume claim templates
    set:
      deployment: statefulset
      extraVolumeMounts:
        - name: persistent-queue
          claimTemplate:
            metadata:
              name: persistent-queue
            spec:
              accessModes: ["ReadWriteOnce"]
              storageClassName: static-cribl-wg-pq
              resources:
                requests:
                  storage: 20Gi
    asserts:
      - exists:
          path: spec.volumeClaimTemplates
      - hasDocuments:
          count: 1
      - contains:
          path: spec.volumeClaimTemplates
          content: 
            metadata:
              name: persistent-queue
            spec:
              accessModes: ["ReadWriteOnce"]
              storageClassName: static-cribl-wg-pq
              resources:
                requests:
                  storage: 20Gi

  - it: Appends -wolfi suffix when wolfiImage is true
    set:
      deployment: statefulset
      criblImage:
        repository: foo/bar
        tag: 42.0.0
        wolfiImage: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: foo/bar:42.0.0-wolfi

  - it: Should not have persistentVolumeClaimRetentionPolicy by default
    set:
      deployment: statefulset
    asserts:
      - isNull:
          path: spec.persistentVolumeClaimRetentionPolicy

  - it: Should have persistentVolumeClaimRetentionPolicy when configured
    set:
      deployment: statefulset
      statefulset:
        persistentVolumeClaimRetentionPolicy:
          whenDeleted: Delete
          whenScaled: Delete
    asserts:
      - exists:
          path: spec.persistentVolumeClaimRetentionPolicy
      - equal:
          path: spec.persistentVolumeClaimRetentionPolicy
          value:
            whenDeleted: Delete
            whenScaled: Delete

  - it: Should handle persistentVolumeClaimRetentionPolicy with only whenDeleted
    set:
      deployment: statefulset
      statefulset:
        persistentVolumeClaimRetentionPolicy:
          whenDeleted: Retain
    asserts:
      - exists:
          path: spec.persistentVolumeClaimRetentionPolicy
      - equal:
          path: spec.persistentVolumeClaimRetentionPolicy
          value:
            whenDeleted: Retain

  - it: Should handle persistentVolumeClaimRetentionPolicy with only whenScaled
    set:
      deployment: statefulset
      statefulset:
        persistentVolumeClaimRetentionPolicy:
          whenScaled: Retain
    asserts:
      - exists:
          path: spec.persistentVolumeClaimRetentionPolicy
      - equal:
          path: spec.persistentVolumeClaimRetentionPolicy
          value:
            whenScaled: Retain

  - it: Should handle empty persistentVolumeClaimRetentionPolicy object
    set:
      deployment: statefulset
      statefulset:
        persistentVolumeClaimRetentionPolicy: {}
    asserts:
      - isNull:
          path: spec.persistentVolumeClaimRetentionPolicy

  - it: Should handle mixed persistentVolumeClaimRetentionPolicy configuration
    set:
      deployment: statefulset
      statefulset:
        persistentVolumeClaimRetentionPolicy:
          whenDeleted: Delete
          whenScaled: Retain
    asserts:
      - exists:
          path: spec.persistentVolumeClaimRetentionPolicy
      - equal:
          path: spec.persistentVolumeClaimRetentionPolicy.whenDeleted
          value: Delete
      - equal:
          path: spec.persistentVolumeClaimRetentionPolicy.whenScaled
          value: Retain

  - it: Does not append -wolfi suffix when wolfiImage is false
    set:
      deployment: statefulset
      criblImage:
        repository: foo/bar
        tag: 42.0.0
        wolfiImage: false
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: foo/bar:42.0.0